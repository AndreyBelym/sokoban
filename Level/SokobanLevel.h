#pragma once
#include "Level.h"
#include "SokobanObjects.h"
//!Класс "Уровень Сокобана".
class SokobanLevel:public Level{
  private:
    int box_count,//!<количество объектов класса "Ящик"
        mark_count,//!<количество меченых полей
        keeper_count;//!<количество объектов класса "Кладовщик"
  public:
    /*Конструктор по умолчанию.
     */
    SokobanLevel();
    
    /*!Добавление на уровень существующего объекта,
     * заданного указателем на него, и размещение его
     * в заданных строке и столбце.
     * \param obj указатель на добавляемый объект
     * \param row строка, куда добавляется объект
     * \param col столбец, куда возвращается объект
     * \return true, если операция выполнена успешно, иначе false. 
     */ 
    bool attachObject(LevelObject *obj,int row,int col);
     
    /*!Отключение от уровня объекта, 
     * находящегося в указанных строке и столбце.
     * \param row строка, в которой находится объект
     * \param col столбец, в котором находится объект
     * \return указатель на отключенный объект
     */
    LevelObject* detachObject(int row,int col);    
    
    /*!Замена объекта, находящегося в заданных строке и столбце,
     * на объект, заданный указателем, с возможностью отключения или удаления
     * старого объекта.
     * \param obj указатель на новый объект
     * \param row строка, в которой находится старый объект
     * \param col столбец, в котором находится старый объект
     * \param destroy флаг удаления старого объекта
     * \return указатель на старый объект.
     */
    LevelObject* replaceObject(LevelObject *obj,int row,int col,bool destroy=true);    
    
    /*!Установка или снятие метки с указанного поля.
     * \param row строка, в которой находится поле
     * \param col столбец, в котором находится поле
     * \param val флаг метки поля
     * \return true, если операция выполнена успешно, иначе false. 
     */
    bool setMarked(int row,int col,bool val=true);

    /*!Загрузка уровня: ввод уровня из потока.
     * \param is поток ввода
     * \return измененный поток ввода
     */
    std::istream& load(std::istream& is);
    
    /*!Проверка целостности уровня.
     * \return true, если на уровне один кладовщик, и число меченых полей 
     * совпадает с числом ящиков, иначе false.
     */
    bool validate();
    
    /*!Очистка уровня: удаление всех объектов и обнуление размера уровня.
     */
    void clear();
};
